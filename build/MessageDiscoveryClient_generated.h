// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_MESSAGEDISCOVERYCLIENT_JOESCAN_SCHEMA_CLIENT_H_
#define FLATBUFFERS_GENERATED_MESSAGEDISCOVERYCLIENT_JOESCAN_SCHEMA_CLIENT_H_

#include "flatbuffers/flatbuffers.h"

namespace joescan {
namespace schema {
namespace client {

struct MessageClientDiscovery;
struct MessageClientDiscoveryBuilder;
struct MessageClientDiscoveryT;

struct MessageClientDiscoveryT : public flatbuffers::NativeTable {
  typedef MessageClientDiscovery TableType;
  uint32_t version_api_major = 0;
  uint32_t version_api_minor = 0;
  uint32_t version_api_patch = 0;
};

struct MessageClientDiscovery FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef MessageClientDiscoveryT NativeTableType;
  typedef MessageClientDiscoveryBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_VERSION_API_MAJOR = 4,
    VT_VERSION_API_MINOR = 6,
    VT_VERSION_API_PATCH = 8
  };
  uint32_t version_api_major() const {
    return GetField<uint32_t>(VT_VERSION_API_MAJOR, 0);
  }
  uint32_t version_api_minor() const {
    return GetField<uint32_t>(VT_VERSION_API_MINOR, 0);
  }
  uint32_t version_api_patch() const {
    return GetField<uint32_t>(VT_VERSION_API_PATCH, 0);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<uint32_t>(verifier, VT_VERSION_API_MAJOR) &&
           VerifyField<uint32_t>(verifier, VT_VERSION_API_MINOR) &&
           VerifyField<uint32_t>(verifier, VT_VERSION_API_PATCH) &&
           verifier.EndTable();
  }
  MessageClientDiscoveryT *UnPack(const flatbuffers::resolver_function_t *_resolver = nullptr) const;
  void UnPackTo(MessageClientDiscoveryT *_o, const flatbuffers::resolver_function_t *_resolver = nullptr) const;
  static flatbuffers::Offset<MessageClientDiscovery> Pack(flatbuffers::FlatBufferBuilder &_fbb, const MessageClientDiscoveryT* _o, const flatbuffers::rehasher_function_t *_rehasher = nullptr);
};

struct MessageClientDiscoveryBuilder {
  typedef MessageClientDiscovery Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_version_api_major(uint32_t version_api_major) {
    fbb_.AddElement<uint32_t>(MessageClientDiscovery::VT_VERSION_API_MAJOR, version_api_major, 0);
  }
  void add_version_api_minor(uint32_t version_api_minor) {
    fbb_.AddElement<uint32_t>(MessageClientDiscovery::VT_VERSION_API_MINOR, version_api_minor, 0);
  }
  void add_version_api_patch(uint32_t version_api_patch) {
    fbb_.AddElement<uint32_t>(MessageClientDiscovery::VT_VERSION_API_PATCH, version_api_patch, 0);
  }
  explicit MessageClientDiscoveryBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<MessageClientDiscovery> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<MessageClientDiscovery>(end);
    return o;
  }
};

inline flatbuffers::Offset<MessageClientDiscovery> CreateMessageClientDiscovery(
    flatbuffers::FlatBufferBuilder &_fbb,
    uint32_t version_api_major = 0,
    uint32_t version_api_minor = 0,
    uint32_t version_api_patch = 0) {
  MessageClientDiscoveryBuilder builder_(_fbb);
  builder_.add_version_api_patch(version_api_patch);
  builder_.add_version_api_minor(version_api_minor);
  builder_.add_version_api_major(version_api_major);
  return builder_.Finish();
}

flatbuffers::Offset<MessageClientDiscovery> CreateMessageClientDiscovery(flatbuffers::FlatBufferBuilder &_fbb, const MessageClientDiscoveryT *_o, const flatbuffers::rehasher_function_t *_rehasher = nullptr);

inline MessageClientDiscoveryT *MessageClientDiscovery::UnPack(const flatbuffers::resolver_function_t *_resolver) const {
  auto _o = std::unique_ptr<MessageClientDiscoveryT>(new MessageClientDiscoveryT());
  UnPackTo(_o.get(), _resolver);
  return _o.release();
}

inline void MessageClientDiscovery::UnPackTo(MessageClientDiscoveryT *_o, const flatbuffers::resolver_function_t *_resolver) const {
  (void)_o;
  (void)_resolver;
  { auto _e = version_api_major(); _o->version_api_major = _e; }
  { auto _e = version_api_minor(); _o->version_api_minor = _e; }
  { auto _e = version_api_patch(); _o->version_api_patch = _e; }
}

inline flatbuffers::Offset<MessageClientDiscovery> MessageClientDiscovery::Pack(flatbuffers::FlatBufferBuilder &_fbb, const MessageClientDiscoveryT* _o, const flatbuffers::rehasher_function_t *_rehasher) {
  return CreateMessageClientDiscovery(_fbb, _o, _rehasher);
}

inline flatbuffers::Offset<MessageClientDiscovery> CreateMessageClientDiscovery(flatbuffers::FlatBufferBuilder &_fbb, const MessageClientDiscoveryT *_o, const flatbuffers::rehasher_function_t *_rehasher) {
  (void)_rehasher;
  (void)_o;
  struct _VectorArgs { flatbuffers::FlatBufferBuilder *__fbb; const MessageClientDiscoveryT* __o; const flatbuffers::rehasher_function_t *__rehasher; } _va = { &_fbb, _o, _rehasher}; (void)_va;
  auto _version_api_major = _o->version_api_major;
  auto _version_api_minor = _o->version_api_minor;
  auto _version_api_patch = _o->version_api_patch;
  return joescan::schema::client::CreateMessageClientDiscovery(
      _fbb,
      _version_api_major,
      _version_api_minor,
      _version_api_patch);
}

inline const joescan::schema::client::MessageClientDiscovery *GetMessageClientDiscovery(const void *buf) {
  return flatbuffers::GetRoot<joescan::schema::client::MessageClientDiscovery>(buf);
}

inline const joescan::schema::client::MessageClientDiscovery *GetSizePrefixedMessageClientDiscovery(const void *buf) {
  return flatbuffers::GetSizePrefixedRoot<joescan::schema::client::MessageClientDiscovery>(buf);
}

inline bool VerifyMessageClientDiscoveryBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifyBuffer<joescan::schema::client::MessageClientDiscovery>(nullptr);
}

inline bool VerifySizePrefixedMessageClientDiscoveryBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifySizePrefixedBuffer<joescan::schema::client::MessageClientDiscovery>(nullptr);
}

inline void FinishMessageClientDiscoveryBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<joescan::schema::client::MessageClientDiscovery> root) {
  fbb.Finish(root);
}

inline void FinishSizePrefixedMessageClientDiscoveryBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<joescan::schema::client::MessageClientDiscovery> root) {
  fbb.FinishSizePrefixed(root);
}

inline std::unique_ptr<joescan::schema::client::MessageClientDiscoveryT> UnPackMessageClientDiscovery(
    const void *buf,
    const flatbuffers::resolver_function_t *res = nullptr) {
  return std::unique_ptr<joescan::schema::client::MessageClientDiscoveryT>(GetMessageClientDiscovery(buf)->UnPack(res));
}

inline std::unique_ptr<joescan::schema::client::MessageClientDiscoveryT> UnPackSizePrefixedMessageClientDiscovery(
    const void *buf,
    const flatbuffers::resolver_function_t *res = nullptr) {
  return std::unique_ptr<joescan::schema::client::MessageClientDiscoveryT>(GetSizePrefixedMessageClientDiscovery(buf)->UnPack(res));
}

}  // namespace client
}  // namespace schema
}  // namespace joescan

#endif  // FLATBUFFERS_GENERATED_MESSAGEDISCOVERYCLIENT_JOESCAN_SCHEMA_CLIENT_H_
